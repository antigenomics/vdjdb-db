FROM ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive


# Fix certificate issues
RUN apt-get update && \
    apt-get install -y ca-certificates-java && \
    apt-get clean && \
    apt-get update && \
    update-ca-certificates -f;

# `openjdk-8`
RUN apt-get update && \
    apt-get install -y \
    gnupg \
    software-properties-common && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN apt-get update
RUN add-apt-repository -y ppa:openjdk-r/ppa
RUN apt-get update

# JAVA installation
RUN apt-get install -y openjdk-8-jre openjdk-8-jdk openjdk-8-jdk-headless openjdk-8-jre-headless
RUN update-alternatives --config java
RUN update-alternatives --config javac

# Setup JAVA_HOME -- useful for docker commandline
ENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64/
RUN export JAVA_HOME


# Python 3.10 installation
RUN apt-get update && \
    apt-get install -y python3 python3-pip && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN ln -s /usr/bin/python3 /usr/bin/python
RUN python3 --version && pip --version

RUN python3 -m pip install 'pandas==2.2.2' 'numpy==2.0.0' 'olga==1.2.4'
RUN python3 -m pip install 'termcolor==2.1.0'


RUN apt-get update \
 && apt-get install wget unzip zip -y
RUN apt-get install -y git
RUN apt-get install -y curl
RUN apt-get install -y pandoc

SHELL ["/bin/bash", "-c"] 


# R installation
RUN apt-get update \
        && apt-get install -y --no-install-recommends \
        && add-apt-repository ppa:marutter/rrutter4.0 \
        && apt-get update && apt-get install -y \
         r-base \
         r-base-dev \
         r-recommended

Run Rscript -e 'R.version'

RUN apt-get install -y libnlopt-dev
RUN apt-get install -y libfontconfig1-dev
RUN apt-get install -y libcurl4-openssl-dev
RUN apt-get install -y libssl-dev
RUN apt-get install -y libxml2 libxml2-dev
RUN apt-get install -y libcairo2-dev libxt-dev libx11-dev
RUN apt-get install -y libmagick++-dev
RUN apt-get install -y libharfbuzz-dev libfribidi-dev

RUN Rscript -e 'install.packages(c("knitr", "ggplot2", "RColorBrewer", "data.table", "forcats", "ggh4x", "ggalluvial", "circlize", "ggrepel", "tidyverse", "httr", "xml2", "stringr", "gridExtra", "maps", "scatterpie", "dplyr", "stringdist", "reshape2", "igraph", "ggseqlogo", "cowplot", "ggpubr", "rmarkdown"))'

RUN Rscript -e 'installed.packages()'

RUN apt-get install -y texlive-latex-base texlive-fonts-recommended texlive-fonts-extra texlive-latex-extra
RUN apt-get install -y build-essential procps curl file git

# VDJtools installation
RUN wget https://github.com/mikessh/vdjtools/releases/download/1.2.1/vdjtools-1.2.1.zip
RUN mkdir -p /software/bin/
RUN unzip vdjtools-1.2.1.zip
RUN cp -r vdjtools-1.2.1/* /software/bin/
RUN chmod +x /software/bin/vdjtools
RUN cd /software/bin/
RUN git clone https://github.com/antigenomics/mirpy.git

ENV PATH="/usr/lib/jvm/java-8-openjdk-amd64/bin:${PATH}"
ENV PATH="/software/bin:${PATH}"

COPY docker.sh ./

CMD [ "bash", "docker.sh" ]